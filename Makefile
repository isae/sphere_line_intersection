#############################################################################
# Makefile for building: practice2
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Apr 18 02:17:54 2014
# Project:  practice2.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile practice2.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I../googletest/include -Ivisualizer -I. -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib -L/usr/lib/x86_64-linux-gnu -lgmp -lgmpxx libgtest.a -L/home/xottab/cg-course/practice2/ -lgtest -lGL -lQtOpenGL -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		test.cpp \
		my_visualizer.cpp \
		visualizer/visualization.cpp \
		visualizer/view.cpp \
		visualizer/vectornd.cpp \
		visualizer/vector3d.cpp \
		visualizer/vector2d.cpp \
		visualizer/random.cpp \
		visualizer/radix.cpp \
		visualizer/exampleclass.cpp \
		run_visualizer.cpp \
		visualizer/console.cpp \
		visualizer/axisview.cpp moc_visualization.cpp
OBJECTS       = main.o \
		test.o \
		my_visualizer.o \
		visualization.o \
		view.o \
		vectornd.o \
		vector3d.o \
		vector2d.o \
		random.o \
		radix.o \
		exampleclass.o \
		run_visualizer.o \
		console.o \
		axisview.o \
		moc_visualization.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		practice2.pro
QMAKE_TARGET  = practice2
DESTDIR       = 
TARGET        = practice2

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): /home/xottab/cg-course/practice2/libgtest.a $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: practice2.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile practice2.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile practice2.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/practice21.0.0 || $(MKDIR) .tmp/practice21.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/practice21.0.0/ && $(COPY_FILE) --parents has_intersection.h my_visualizer.h visualizer/visualization.h visualizer/view.h visualizer/vectornd.h visualizer/vector3d.h visualizer/vector2d.h visualizer/random.h visualizer/radix.h visualizer/orientation.h visualizer/exampleclass.h visualizer/console.h visualizer/axisview.h .tmp/practice21.0.0/ && $(COPY_FILE) --parents main.cpp test.cpp my_visualizer.cpp visualizer/visualization.cpp visualizer/view.cpp visualizer/vectornd.cpp visualizer/vector3d.cpp visualizer/vector2d.cpp visualizer/random.cpp visualizer/radix.cpp visualizer/exampleclass.cpp run_visualizer.cpp visualizer/console.cpp visualizer/axisview.cpp .tmp/practice21.0.0/ && (cd `dirname .tmp/practice21.0.0` && $(TAR) practice21.0.0.tar practice21.0.0 && $(COMPRESS) practice21.0.0.tar) && $(MOVE) `dirname .tmp/practice21.0.0`/practice21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/practice21.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_visualization.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_visualization.cpp
moc_visualization.cpp: visualizer/axisview.h \
		visualizer/view.h \
		visualizer/console.h \
		visualizer/vector2d.h \
		visualizer/vector3d.h \
		visualizer/random.h \
		visualizer/visualization.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) visualizer/visualization.h -o moc_visualization.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp has_intersection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

test.o: test.cpp has_intersection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o test.o test.cpp

my_visualizer.o: my_visualizer.cpp my_visualizer.h \
		visualizer/visualization.h \
		visualizer/axisview.h \
		visualizer/view.h \
		visualizer/console.h \
		visualizer/vector2d.h \
		visualizer/vector3d.h \
		visualizer/random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o my_visualizer.o my_visualizer.cpp

visualization.o: visualizer/visualization.cpp visualizer/visualization.h \
		visualizer/axisview.h \
		visualizer/view.h \
		visualizer/console.h \
		visualizer/vector2d.h \
		visualizer/vector3d.h \
		visualizer/random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o visualization.o visualizer/visualization.cpp

view.o: visualizer/view.cpp visualizer/view.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o view.o visualizer/view.cpp

vectornd.o: visualizer/vectornd.cpp visualizer/vectornd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vectornd.o visualizer/vectornd.cpp

vector3d.o: visualizer/vector3d.cpp visualizer/vector3d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vector3d.o visualizer/vector3d.cpp

vector2d.o: visualizer/vector2d.cpp visualizer/vector2d.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o vector2d.o visualizer/vector2d.cpp

random.o: visualizer/random.cpp visualizer/random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o random.o visualizer/random.cpp

radix.o: visualizer/radix.cpp visualizer/radix.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o radix.o visualizer/radix.cpp

exampleclass.o: visualizer/exampleclass.cpp visualizer/exampleclass.h \
		visualizer/visualization.h \
		visualizer/axisview.h \
		visualizer/view.h \
		visualizer/console.h \
		visualizer/vector2d.h \
		visualizer/vector3d.h \
		visualizer/random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exampleclass.o visualizer/exampleclass.cpp

run_visualizer.o: run_visualizer.cpp my_visualizer.h \
		visualizer/visualization.h \
		visualizer/axisview.h \
		visualizer/view.h \
		visualizer/console.h \
		visualizer/vector2d.h \
		visualizer/vector3d.h \
		visualizer/random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o run_visualizer.o run_visualizer.cpp

console.o: visualizer/console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o console.o visualizer/console.cpp

axisview.o: visualizer/axisview.cpp visualizer/axisview.h \
		visualizer/view.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o axisview.o visualizer/axisview.cpp

moc_visualization.o: moc_visualization.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_visualization.o moc_visualization.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

